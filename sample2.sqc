#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sqlenv.h>
#include <sqlutil.h>

// FIXME: unsure as to why SQLSTATE doesn't work.
// #define NO_MORE_TUPLES !(strcmp(SQLSTATE, "02000"))

// EXEC SQL BEGIN DECLARE SECTION;
// char SQLSTATE[6];
// EXEC SQL END DECLARE SECTION;

int part1();
int part2();
int part3();


int main(int argc, char *argv[])
{
  struct sqlca sqlca;

  EXEC SQL CONNECT TO SAMPLE;

  part1();
  part2();
  part3();

  EXEC SQL CONNECT RESET;

  printf("\n");
  return 0;
}

// display the department table
int part1() {
  printf("\n1. Display the `department` table.\n\n");

  struct sqlca sqlca;

  EXEC SQL BEGIN DECLARE SECTION;
  char deptNo[64];
  char deptName[64];
  char mgrNo[64];
  char ADMRDept[64];
  char location[64];
  int rowCount;
  EXEC SQL END DECLARE SECTION;

  EXEC SQL SELECT COUNT(1) INTO :rowCount FROM DEPARTMENT;

  EXEC SQL DECLARE execCursorOne CURSOR FOR
    SELECT COALESCE(deptNo, '-'),
           COALESCE(deptName, '-'),
           COALESCE(mgrNo, '-'),
           COALESCE(ADMRDept, '-'),
           COALESCE(location, '-') FROM department;
  EXEC SQL OPEN execCursorOne;

  char tableFormat[50];
  strcpy(tableFormat, "| %8s | %30s | %8s | %10s | %10s |\n");
  printf(tableFormat, "DeptNo", "DeptName", "MgrNo", "ADMRDept", "Location");
  printf(tableFormat, "------", "--------", "-----", "--------", "--------");
  while (rowCount-- > 0) {
    EXEC SQL FETCH execCursorOne INTO
      :deptNo, :deptName, :mgrNo, :ADMRDept, :location;
    printf(tableFormat, deptNo, deptName, mgrNo, ADMRDept, location);
  }

  EXEC SQL CLOSE execCursorOne;

  printf("\n");
  return 0;
}

// display the employee table
int part2() {
  printf("\n2. Display the `employee` table.\n\n");

  struct sqlca sqlca;

  EXEC SQL BEGIN DECLARE SECTION;
  char firstName[64];
  char midInitial;
  char lastName[64];
  char sex;
  float bonus;
  float commission;
  float salary;
  int rowCount;
  EXEC SQL END DECLARE SECTION;

  EXEC SQL SELECT COUNT(1) INTO :rowCount FROM EMPLOYEE;

  EXEC SQL DECLARE execCursorTwo CURSOR FOR
    SELECT COALESCE(firstNme, '-'),
           COALESCE(midInit, '-'),
           COALESCE(lastName, '-'),
           COALESCE(sex, '-'),
           COALESCE(bonus, '-'),
           COALESCE(comm, '-'),
           COALESCE(salary, '-') FROM EMPLOYEE;
  EXEC SQL OPEN execCursorTwo;

  char tableFormat[50];
  strcpy(tableFormat, "| %12s | %c | %12s | %c | %.2f | %.2f | %.2f |\n");
  printf("| %12s | %8s | %12s | %5s | %10s | %10s | %10s |\n",
      "First Name", "Mid Init", "Last Name", "Sex", "Bonus", "Commission", "Salary");
  printf(tableFormat, "----------", "--------", "---------", "---", "-----", "----------", "------");
  while (rowCount-- > 0) {
    EXEC SQL FETCH execCursorTwo INTO
      :firstName, :midInitial, :lastName, :sex, :bonus, :commission, :salary;
    printf(tableFormat, firstName, midInitial, lastName, sex, bonus, commission, salary);
  }

  EXEC SQL CLOSE execCursorTwo;

  printf("\n");
  return 0;
}

// display joined employee and dept info
int part3() {
  printf("\n3. Display employee and department info.\n\n");

  struct sqlca sqlca;

  EXEC SQL BEGIN DECLARE SECTION;
  char firstName[64];
  char lastName[64];
  char deptNo[64];
  char deptName[64];
  char mgrNo[64];
  int rowCount;

  EXEC SQL END DECLARE SECTION;

  EXEC SQL SELECT COUNT(1) INTO :rowCount FROM EMPLOYEE;

  EXEC SQL DECLARE execCursorThree CURSOR FOR
    SELECT COALESCE(firstNme, '-'),
           COALESCE(lastName, '-'),
           COALESCE(deptNo, '-'),
           COALESCE(deptName, '-'),
           COALESCE(mgrNo, '-') FROM EMPLOYEE
    LEFT OUTER JOIN DEPARTMENT ON workdept = deptno;
  EXEC SQL OPEN execCursorThree;

  char tableFormat[50];
  strcpy(tableFormat, "| %15s | %15s | %8s | %30s | %8s |\n");
  printf(tableFormat, "First Name", "Last Name", "Dept No", "Dept Name", "Mgr No");
  printf(tableFormat, "----------", "---------", "-------", "---------", "------");
  while (rowCount-- > 0) {
    EXEC SQL FETCH execCursorThree INTO
      :firstName, :lastName, :deptNo, :deptName, :mgrNo;
    printf(tableFormat, firstName, lastName, deptNo, deptName, mgrNo);
  }

  EXEC SQL CLOSE execCursorThree;

  printf("\n");
  return 0;
}
